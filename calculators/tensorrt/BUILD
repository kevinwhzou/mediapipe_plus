
load("@mediapipe_official//mediapipe/framework/port:build_config.bzl", "mediapipe_proto_library")
load("@bazel_skylib//lib:selects.bzl", "selects")

licenses(["notice"])
package(default_visibility = ["//visibility:private"])
#cc_library(
#    name = "MyStringProcessCalculator",
#    srcs = ["mystring_process_calculator.cc"],
#    visibility = [
#        "//visibility:public",
#    ],
#    deps = [
#        "@mediapipe_official//mediapipe/framework:calculator_cc_proto",
#        "@mediapipe_official//mediapipe/framework:calculator_framework",
#        "@mediapipe_official//mediapipe/framework/port:status",
#    ],
#    alwayslink = 1,
#)
#trt8 common srcs and headers
cc_library(
    name = "trt8_common",
    srcs = glob([
                 "common/*.cpp",
                 "common/*.c",
                 "common_header.cpp"
                ]),
    hdrs=glob([
                 "common/*.h",
                 "common/*.hpp",
                 "*.h",
                ]),
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/cuda_trt:cuda_api_headers",
    ],
    copts = [
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/",
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/crt/",
             "-Ithird_party/cuda_trt/usr_local_cuda/include/",
            ],
    linkopts = [
        "-L/usr/local/lib",
        "-L/usr/lib/aarch64-linux-gnu/",
        "-L/usr/local/cuda-10.2/targets/aarch64-linux/lib/",
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgproc",
        "-lopencv_video",
        "-lopencv_videoio",
        "-lnvonnxparser",
        "-lnvinfer_plugin",
        "-lnvparsers",
        "-lnvinfer",
        "-lcublas",
        "-lcudnn",
        "-lcudart",
    ],
)

cc_library(
    name = "MyStringProcessCalculator",
    srcs = ["mystring_process_calculator.cc"],
    visibility = ["//visibility:public"],
    deps = [
        "@mediapipe_official//mediapipe/framework:calculator_framework",
        "@mediapipe_official//mediapipe/framework/formats:matrix",
        "@mediapipe_official//mediapipe/framework/formats:time_series_header_cc_proto",
        "@mediapipe_official//mediapipe/framework/port:integral_types",
        "@mediapipe_official//mediapipe/framework/port:logging",
        "@mediapipe_official//mediapipe/framework/port:parse_text_proto",
        "@mediapipe_official//mediapipe/util:time_series_util",
        "@com_google_absl//absl/strings",
        "//third_party/cuda_trt:cuda_api_headers",

    ],
    copts = [
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/crt/",
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/",
             "-Ithird_party/cuda_trt/usr_local_cuda/include/",
            ],
    linkopts = [
        "-L/usr/local/lib",
        "-L/usr/lib/aarch64-linux-gnu/",
        "-L/usr/local/cuda-10.2/targets/aarch64-linux/lib/",
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgproc",
        "-lopencv_video",
        "-lopencv_videoio",
        "-lnvonnxparser",
        "-lnvinfer_plugin",
        "-lnvparsers",
        "-lnvinfer",
        "-lcublas",
        "-lcudnn",
        "-lcudart",
    ],

    alwayslink = 1,
)

#GpuBufToTrtBufCalculator config
cc_library(
    name = "GpuBufToTrtBufCalculator",
    srcs = ["gpubuf_to_trtbuf_calculator.cc"],
    visibility = ["//visibility:public"],
    deps = [
        "@mediapipe_official//mediapipe/framework/formats:image",
        "@mediapipe_official//mediapipe/framework/formats:image_frame",
        "@mediapipe_official//mediapipe/framework:calculator_framework",
        "//calculators/tensorrt:trt8_common",
        "@mediapipe_official//mediapipe/framework/formats:rect_cc_proto",
        "@mediapipe_official//mediapipe/framework/formats:tensor",
        "@mediapipe_official//mediapipe/framework/port:ret_check",
        "@mediapipe_official//mediapipe/framework/port:status",
        "@mediapipe_official//mediapipe/framework/port:statusor",
        "@mediapipe_official//mediapipe/gpu:gpu_origin_cc_proto",
        "@mediapipe_official//mediapipe/framework/formats:matrix",
        "@mediapipe_official//mediapipe/framework/formats:time_series_header_cc_proto",
        "@mediapipe_official//mediapipe/framework/port:integral_types",
        "@mediapipe_official//mediapipe/framework/port:logging",
        "@mediapipe_official//mediapipe/framework/port:parse_text_proto",
        "@mediapipe_official//mediapipe/util:time_series_util",
        "@com_google_absl//absl/strings",
        "//third_party/cuda_trt:cuda_api_headers",
        "@mediapipe_official//mediapipe/gpu:gl_calculator_helper",
        #"@mediapipe_official//mediapipe/calculators/tensor:image_to_tensor_calculator_gpu_deps",
        #"@mediapipe_official//mediapipe/calculators/tensor:image_to_tensor_converter_opencv"
        ],
    copts = [
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/crt/",
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/",
             "-Ithird_party/cuda_trt/usr_local_cuda/include/",
            ],
    linkopts = [
        "-L/usr/local/lib",
        "-L/usr/lib/aarch64-linux-gnu/",
        "-L/usr/local/cuda-10.2/targets/aarch64-linux/lib/",
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgproc",
        "-lopencv_video",
        "-lopencv_videoio",
        "-lnvonnxparser",
        "-lnvinfer_plugin",
        "-lnvparsers",
        "-lnvinfer",
        "-lcublas",
        "-lcudnn",
        "-lcudart",
    ],
    alwayslink = 1,
)

#TrtInferenceCalculator config
cc_library(
    name = "TrtInferenceCalculator",
    srcs = ["trt_inference_calculator.cc"],
    visibility = ["//visibility:public"],
    deps = [
        "@mediapipe_official//mediapipe/framework/formats:image",
        "//calculators/tensorrt:trt8_common",
        "@mediapipe_official//mediapipe/framework/formats:image_frame",
        "@mediapipe_official//mediapipe/framework:calculator_framework",
        "@mediapipe_official//mediapipe/framework/formats:rect_cc_proto",
        "@mediapipe_official//mediapipe/framework/formats:tensor",
        "@mediapipe_official//mediapipe/framework/port:ret_check",
        "@mediapipe_official//mediapipe/framework/port:status",
        "@mediapipe_official//mediapipe/framework/port:statusor",
        "@mediapipe_official//mediapipe/framework/port:opencv_highgui",
        "@mediapipe_official//mediapipe/framework/port:opencv_imgproc",
        "@mediapipe_official//mediapipe/framework/port:opencv_video",
        "@mediapipe_official//mediapipe/gpu:gpu_origin_cc_proto",
        "@mediapipe_official//mediapipe/framework/formats:matrix",
        "@mediapipe_official//mediapipe/framework/formats:time_series_header_cc_proto",
        "@mediapipe_official//mediapipe/framework/port:integral_types",
        "@mediapipe_official//mediapipe/framework/port:logging",
        "@mediapipe_official//mediapipe/framework/port:parse_text_proto",
        "@mediapipe_official//mediapipe/util:time_series_util",
        "@com_google_absl//absl/strings",
        "//third_party/cuda_trt:cuda_api_headers",
        "@mediapipe_official//mediapipe/gpu:gl_calculator_helper",
        #"@mediapipe_official//mediapipe/calculators/tensor:image_to_tensor_calculator_gpu_deps",
        #"@mediapipe_official//mediapipe/calculators/tensor:image_to_tensor_converter_opencv"
        ],
    copts = [
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/crt/",
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/",
             "-Ithird_party/cuda_trt/usr_local_cuda/include/",
            ],
    linkopts = [
        "-L/usr/local/lib",
        "-L/usr/lib/aarch64-linux-gnu/",
        "-L/usr/local/cuda-10.2/targets/aarch64-linux/lib/",
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgproc",
        "-lopencv_video",
        "-lopencv_videoio",
        "-lnvonnxparser",
        "-lnvinfer_plugin",
        "-lnvparsers",
        "-lnvinfer",
        "-lcublas",
        "-lcudnn",
        "-lcudart",
    ],
    alwayslink = 1,
)


#PostProcessCalculator config
cc_library(
    name = "PostProcessCalculator",
    srcs = ["postprocess_calculator.cc"],
    visibility = ["//visibility:public"],
    deps = [
        "@mediapipe_official//mediapipe/framework/formats:image",
        "//calculators/tensorrt:trt8_common",
        "@mediapipe_official//mediapipe/framework/formats:image_frame",
        "@mediapipe_official//mediapipe/framework:calculator_framework",
        "@mediapipe_official//mediapipe/framework/formats:rect_cc_proto",
        "@mediapipe_official//mediapipe/framework/formats:tensor",
        "@mediapipe_official//mediapipe/framework/port:ret_check",
        "@mediapipe_official//mediapipe/framework/port:status",
        "@mediapipe_official//mediapipe/framework/port:statusor",
        "@mediapipe_official//mediapipe/framework/port:opencv_highgui",
        "@mediapipe_official//mediapipe/framework/port:opencv_imgproc",
        "@mediapipe_official//mediapipe/framework/port:opencv_video",
        "@mediapipe_official//mediapipe/gpu:gpu_origin_cc_proto",
        "@mediapipe_official//mediapipe/framework/formats:matrix",
        "@mediapipe_official//mediapipe/framework/formats:time_series_header_cc_proto",
        "@mediapipe_official//mediapipe/framework/port:integral_types",
        "@mediapipe_official//mediapipe/framework/port:logging",
        "@mediapipe_official//mediapipe/framework/port:parse_text_proto",
        "@mediapipe_official//mediapipe/util:time_series_util",
        "@com_google_absl//absl/strings",
        "//third_party/cuda_trt:cuda_api_headers",
        "@mediapipe_official//mediapipe/gpu:gl_calculator_helper",
        #"@mediapipe_official//mediapipe/calculators/tensor:image_to_tensor_calculator_gpu_deps",
        #"@mediapipe_official//mediapipe/calculators/tensor:image_to_tensor_converter_opencv"
        ],
    copts = [
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/crt/",
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/",
             "-Ithird_party/cuda_trt/usr_local_cuda/include/",
            ],
    linkopts = [
        "-L/usr/local/lib",
        "-L/usr/lib/aarch64-linux-gnu/",
        "-L/usr/local/cuda-10.2/targets/aarch64-linux/lib/",
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgproc",
        "-lopencv_video",
        "-lopencv_videoio",
        "-lnvonnxparser",
        "-lnvinfer_plugin",
        "-lnvparsers",
        "-lnvinfer",
        "-lcublas",
        "-lcudnn",
        "-lcudart",
    ],
    alwayslink = 1,
)


################################Calculator Demo Run Srcs
cc_binary(
    name = "gpubuf_to_trtbuf_calculator_test",
    srcs = ["gpubuf_to_trtbuf_calculator_test.cc"],
    deps = [
        "@mediapipe_official//mediapipe/calculators/core:pass_through_calculator",
        "@mediapipe_official//mediapipe/calculators/core:flow_limiter_calculator",
        "//calculators/tensorrt:GpuBufToTrtBufCalculator",
        "//calculators/tensorrt:TrtInferenceCalculator",
        "//calculators/tensorrt:trt8_common",
        "@mediapipe_official//mediapipe/framework:calculator_framework",
        "@mediapipe_official//mediapipe/framework/formats:image_frame",
        "@mediapipe_official//mediapipe/framework/formats:image_frame_opencv",
        "@mediapipe_official//mediapipe/framework/port:file_helpers",
        "@mediapipe_official//mediapipe/framework/port:opencv_highgui",
        "@mediapipe_official//mediapipe/framework/port:opencv_imgproc",
        "@mediapipe_official//mediapipe/framework/port:opencv_video",
        "@mediapipe_official//mediapipe/framework/port:parse_text_proto",
        "@mediapipe_official//mediapipe/framework/port:status",
        "@mediapipe_official//mediapipe/gpu:gl_calculator_helper",
        "@mediapipe_official//mediapipe/gpu:gpu_buffer",
        "@mediapipe_official//mediapipe/gpu:gpu_shared_data_internal",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "//third_party/cuda_trt:cuda_api_headers",
    ],
    copts = [
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/crt/",
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/",
             "-Ithird_party/cuda_trt/usr_local_cuda/include/",
            ],
    linkopts = [
        "-L/usr/local/lib",
        "-L/usr/lib/aarch64-linux-gnu/",
        "-L/usr/local/cuda-10.2/targets/aarch64-linux/lib/",
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgproc",
        "-lopencv_video",
        "-lopencv_videoio",
        "-lnvonnxparser",
        "-lnvinfer_plugin",
        "-lnvparsers",
        "-lnvinfer",
        "-lcublas",
        "-lcudnn",
        "-lcudart",
        "-ldl",
    ],
)


cc_binary(
    name = "trt_inference_calculator_test",
    srcs = ["trt_inference_calculator_test.cc"],
    deps = [
        "@mediapipe_official//mediapipe/calculators/core:pass_through_calculator",
        "@mediapipe_official//mediapipe/calculators/core:flow_limiter_calculator",
        "//calculators/tensorrt:GpuBufToTrtBufCalculator",
        "//calculators/tensorrt:TrtInferenceCalculator",
        "//calculators/tensorrt:PostProcessCalculator",
        "//calculators/tensorrt:trt8_common",
        "@mediapipe_official//mediapipe/framework:calculator_framework",
        "@mediapipe_official//mediapipe/framework/formats:image_frame",
        "@mediapipe_official//mediapipe/framework/formats:image_frame_opencv",
        "@mediapipe_official//mediapipe/framework/port:file_helpers",
        "@mediapipe_official//mediapipe/framework/port:opencv_highgui",
        "@mediapipe_official//mediapipe/framework/port:opencv_imgproc",
        "@mediapipe_official//mediapipe/framework/port:opencv_video",
        "@mediapipe_official//mediapipe/framework/port:parse_text_proto",
        "@mediapipe_official//mediapipe/framework/port:status",
        "@mediapipe_official//mediapipe/gpu:gl_calculator_helper",
        "@mediapipe_official//mediapipe/gpu:gpu_buffer",
        "@mediapipe_official//mediapipe/gpu:gpu_shared_data_internal",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "//third_party/cuda_trt:cuda_api_headers",
    ],
    copts = [
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/crt/",
             "-Ithird_party/cuda_trt/usr_local_cuda-10.2/include/",
             "-Ithird_party/cuda_trt/usr_local_cuda/include/",
            ],
    linkopts = [
        "-L/usr/local/lib",
        "-L/usr/lib/aarch64-linux-gnu/",
        "-L/usr/local/cuda-10.2/targets/aarch64-linux/lib/",
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgproc",
        "-lopencv_video",
        "-lopencv_videoio",
        "-lnvonnxparser",
        "-lnvinfer_plugin",
        "-lnvparsers",
        "-lnvinfer",
        "-lcublas",
        "-lcudnn",
        "-lcudart",
        "-ldl",
    ],
)

